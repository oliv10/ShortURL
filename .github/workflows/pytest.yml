# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PyTest

on:
  push:
    branches:
      - main
    paths:
      - '**.py'
      - .github/workflows/pytest.yml
  pull_request:
    branches:
      - main
    paths:
      - '**.py'
      - /.github/workflows/pytest.yml
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.x", "3.10", "3.11", "3.12"]
    permissions:
      pull-requests: write

    services:
      redis:
        image: redis/redis-stack-server:7.2.0-v9
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        python -m pip install .[development]
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Add Redis to /etc/hosts
      run: echo "127.0.0.1 redis" | sudo tee -a /etc/hosts
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov-report "xml:/tmp/coverage.xml" --cov=shorturl tests/
    - name: Comment Results
      if: github.event_name == 'pull_request'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-xml-coverage-path: /tmp/coverage.xml
        unique-id-for-comment: ${{ matrix.python-version }}
